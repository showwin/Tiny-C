Terminals which are not used

   CONS
   FUNDEF
   OPE
   MINS
   PSTFIX
   CMPD


State 22 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: main $end

    1 @1: /* empty */

    2 main: @1 program

    3 program: external_declaration
    4        | program external_declaration

    5 external_declaration: declaration
    6                     | function_definition

    7 declaration: INT declarator_list ';'

    8 declarator_list: IDENTIFIER
    9                | declarator_list ',' IDENTIFIER

   10 @2: /* empty */

   11 function_definition: INT IDENTIFIER '(' @2 ')' compound_statement

   12 @3: /* empty */

   13 @4: /* empty */

   14 function_definition: INT IDENTIFIER '(' @3 parameter_type_list @4 ')' compound_statement

   15 parameter_type_list: parameter_declaration
   16                    | parameter_type_list ',' parameter_declaration

   17 parameter_declaration: INT IDENTIFIER

   18 statement: ';'
   19          | expression ';'
   20          | compound_statement
   21          | IF '(' expression ')' statement
   22          | IF '(' expression ')' statement ELSE statement
   23          | WHILE '(' expression ')' statement
   24          | RETURN ';'
   25          | RETURN expression ';'

   26 compound_statement: '{' '}'

   27 @5: /* empty */

   28 compound_statement: '{' @5 opt_declaration_list opt_statement_list '}'

   29 opt_declaration_list: declaration_list
   30                     | /* empty */

   31 opt_statement_list: statement_list
   32                   | /* empty */

   33 declaration_list: declaration
   34                 | declaration_list declaration

   35 statement_list: statement
   36               | statement_list statement

   37 expression: assign_expr
   38           | expression ',' assign_expr

   39 assign_expr: logical_or_expr
   40            | ass_identifier ASS assign_expr

   41 ass_identifier: IDENTIFIER

   42 logical_or_expr: logical_and_expr
   43                | logical_or_expr OR logical_and_expr

   44 logical_and_expr: equality_expr
   45                 | logical_and_expr AND equality_expr

   46 equality_expr: relational_expr
   47              | equality_expr EQU relational_expr
   48              | equality_expr NEQU relational_expr

   49 relational_expr: add_expr
   50                | relational_expr LT add_expr
   51                | relational_expr MT add_expr
   52                | relational_expr ELT add_expr
   53                | relational_expr EMT add_expr

   54 add_expr: mult_expr
   55         | add_expr PLUS mult_expr
   56         | add_expr MINUS mult_expr

   57 mult_expr: unary_expr
   58          | mult_expr MUL unary_expr
   59          | mult_expr DIV unary_expr

   60 unary_expr: postfix_expr
   61           | MINUS unary_expr

   62 postfix_expr: primary_expr
   63             | pst_identifier '(' ')'
   64             | pst_identifier '(' argument_expression_list ')'

   65 pst_identifier: IDENTIFIER

   66 primary_expr: IDENTIFIER
   67             | CONSTANT
   68             | '(' expression ')'

   69 argument_expression_list: assign_expr
   70                         | argument_expression_list ',' assign_expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 14 21 22 23 63 64 68
')' (41) 11 14 21 22 23 63 64 68
',' (44) 9 16 38 70
';' (59) 7 18 19 24 25
'{' (123) 26 28
'}' (125) 26 28
error (256)
ASS (258) 40
PLUS (259) 55
MINUS (260) 56 61
DIV (261) 59
MUL (262) 58
CONS (263)
FUNDEF (264)
OPE (265)
MINS (266)
PSTFIX (267)
INT (268) 7 11 14 17
RETURN (269) 24 25
IF (270) 21 22
ELSE (271) 22
WHILE (272) 23
EQU (273) 47
NEQU (274) 48
ELT (275) 52
LT (276) 50
EMT (277) 53
MT (278) 51
OR (279) 43
AND (280) 45
CMPD (281)
CONSTANT (282) 67
IDENTIFIER (283) 8 9 11 14 17 41 65 66


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
main (36)
    on left: 2, on right: 0
@1 (37)
    on left: 1, on right: 2
program (38)
    on left: 3 4, on right: 2 4
external_declaration (39)
    on left: 5 6, on right: 3 4
declaration (40)
    on left: 7, on right: 5 33 34
declarator_list (41)
    on left: 8 9, on right: 7 9
function_definition (42)
    on left: 11 14, on right: 6
@2 (43)
    on left: 10, on right: 11
@3 (44)
    on left: 12, on right: 14
@4 (45)
    on left: 13, on right: 14
parameter_type_list (46)
    on left: 15 16, on right: 14 16
parameter_declaration (47)
    on left: 17, on right: 15 16
statement (48)
    on left: 18 19 20 21 22 23 24 25, on right: 21 22 23 35 36
compound_statement (49)
    on left: 26 28, on right: 11 14 20
@5 (50)
    on left: 27, on right: 28
opt_declaration_list (51)
    on left: 29 30, on right: 28
opt_statement_list (52)
    on left: 31 32, on right: 28
declaration_list (53)
    on left: 33 34, on right: 29 34
statement_list (54)
    on left: 35 36, on right: 31 36
expression (55)
    on left: 37 38, on right: 19 21 22 23 25 38 68
assign_expr (56)
    on left: 39 40, on right: 37 38 40 69 70
ass_identifier (57)
    on left: 41, on right: 40
logical_or_expr (58)
    on left: 42 43, on right: 39 43
logical_and_expr (59)
    on left: 44 45, on right: 42 43 45
equality_expr (60)
    on left: 46 47 48, on right: 44 45 47 48
relational_expr (61)
    on left: 49 50 51 52 53, on right: 46 47 48 50 51 52 53
add_expr (62)
    on left: 54 55 56, on right: 49 50 51 52 53 55 56
mult_expr (63)
    on left: 57 58 59, on right: 54 55 56 58 59
unary_expr (64)
    on left: 60 61, on right: 57 58 59 61
postfix_expr (65)
    on left: 62 63 64, on right: 60
pst_identifier (66)
    on left: 65, on right: 63 64
primary_expr (67)
    on left: 66 67 68, on right: 62
argument_expression_list (68)
    on left: 69 70, on right: 64 70


state 0

    0 $accept: . main $end

    $default  reduce using rule 1 (@1)

    main  go to state 1
    @1    go to state 2


state 1

    0 $accept: main . $end

    $end  shift, and go to state 3


state 2

    2 main: @1 . program

    INT  shift, and go to state 4

    program               go to state 5
    external_declaration  go to state 6
    declaration           go to state 7
    function_definition   go to state 8


state 3

    0 $accept: main $end .

    $default  accept


state 4

    7 declaration: INT . declarator_list ';'
   11 function_definition: INT . IDENTIFIER '(' @2 ')' compound_statement
   14                    | INT . IDENTIFIER '(' @3 parameter_type_list @4 ')' compound_statement

    IDENTIFIER  shift, and go to state 9

    declarator_list  go to state 10


state 5

    2 main: @1 program .
    4 program: program . external_declaration

    INT  shift, and go to state 4

    $default  reduce using rule 2 (main)

    external_declaration  go to state 11
    declaration           go to state 7
    function_definition   go to state 8


state 6

    3 program: external_declaration .

    $default  reduce using rule 3 (program)


state 7

    5 external_declaration: declaration .

    $default  reduce using rule 5 (external_declaration)


state 8

    6 external_declaration: function_definition .

    $default  reduce using rule 6 (external_declaration)


state 9

    8 declarator_list: IDENTIFIER .
   11 function_definition: INT IDENTIFIER . '(' @2 ')' compound_statement
   14                    | INT IDENTIFIER . '(' @3 parameter_type_list @4 ')' compound_statement

    '('  shift, and go to state 12

    $default  reduce using rule 8 (declarator_list)


state 10

    7 declaration: INT declarator_list . ';'
    9 declarator_list: declarator_list . ',' IDENTIFIER

    ';'  shift, and go to state 13
    ','  shift, and go to state 14


state 11

    4 program: program external_declaration .

    $default  reduce using rule 4 (program)


state 12

   11 function_definition: INT IDENTIFIER '(' . @2 ')' compound_statement
   14                    | INT IDENTIFIER '(' . @3 parameter_type_list @4 ')' compound_statement

    INT       reduce using rule 12 (@3)
    $default  reduce using rule 10 (@2)

    @2  go to state 15
    @3  go to state 16


state 13

    7 declaration: INT declarator_list ';' .

    $default  reduce using rule 7 (declaration)


state 14

    9 declarator_list: declarator_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 17


state 15

   11 function_definition: INT IDENTIFIER '(' @2 . ')' compound_statement

    ')'  shift, and go to state 18


state 16

   14 function_definition: INT IDENTIFIER '(' @3 . parameter_type_list @4 ')' compound_statement

    INT  shift, and go to state 19

    parameter_type_list    go to state 20
    parameter_declaration  go to state 21


state 17

    9 declarator_list: declarator_list ',' IDENTIFIER .

    $default  reduce using rule 9 (declarator_list)


state 18

   11 function_definition: INT IDENTIFIER '(' @2 ')' . compound_statement

    '{'  shift, and go to state 22

    compound_statement  go to state 23


state 19

   17 parameter_declaration: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


state 20

   14 function_definition: INT IDENTIFIER '(' @3 parameter_type_list . @4 ')' compound_statement
   16 parameter_type_list: parameter_type_list . ',' parameter_declaration

    ','  shift, and go to state 25

    $default  reduce using rule 13 (@4)

    @4  go to state 26


state 21

   15 parameter_type_list: parameter_declaration .

    $default  reduce using rule 15 (parameter_type_list)


state 22

   26 compound_statement: '{' . '}'
   28                   | '{' . @5 opt_declaration_list opt_statement_list '}'

    '}'  shift, and go to state 27

    '}'       [reduce using rule 27 (@5)]
    $default  reduce using rule 27 (@5)

    @5  go to state 28


state 23

   11 function_definition: INT IDENTIFIER '(' @2 ')' compound_statement .

    $default  reduce using rule 11 (function_definition)


state 24

   17 parameter_declaration: INT IDENTIFIER .

    $default  reduce using rule 17 (parameter_declaration)


state 25

   16 parameter_type_list: parameter_type_list ',' . parameter_declaration

    INT  shift, and go to state 19

    parameter_declaration  go to state 29


state 26

   14 function_definition: INT IDENTIFIER '(' @3 parameter_type_list @4 . ')' compound_statement

    ')'  shift, and go to state 30


state 27

   26 compound_statement: '{' '}' .

    $default  reduce using rule 26 (compound_statement)


state 28

   28 compound_statement: '{' @5 . opt_declaration_list opt_statement_list '}'

    INT  shift, and go to state 31

    $default  reduce using rule 30 (opt_declaration_list)

    declaration           go to state 32
    opt_declaration_list  go to state 33
    declaration_list      go to state 34


state 29

   16 parameter_type_list: parameter_type_list ',' parameter_declaration .

    $default  reduce using rule 16 (parameter_type_list)


state 30

   14 function_definition: INT IDENTIFIER '(' @3 parameter_type_list @4 ')' . compound_statement

    '{'  shift, and go to state 22

    compound_statement  go to state 35


state 31

    7 declaration: INT . declarator_list ';'

    IDENTIFIER  shift, and go to state 36

    declarator_list  go to state 10


state 32

   33 declaration_list: declaration .

    $default  reduce using rule 33 (declaration_list)


state 33

   28 compound_statement: '{' @5 opt_declaration_list . opt_statement_list '}'

    MINUS       shift, and go to state 37
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    ';'         shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 22

    $default  reduce using rule 32 (opt_statement_list)

    statement           go to state 45
    compound_statement  go to state 46
    opt_statement_list  go to state 47
    statement_list      go to state 48
    expression          go to state 49
    assign_expr         go to state 50
    ass_identifier      go to state 51
    logical_or_expr     go to state 52
    logical_and_expr    go to state 53
    equality_expr       go to state 54
    relational_expr     go to state 55
    add_expr            go to state 56
    mult_expr           go to state 57
    unary_expr          go to state 58
    postfix_expr        go to state 59
    pst_identifier      go to state 60
    primary_expr        go to state 61


state 34

   29 opt_declaration_list: declaration_list .
   34 declaration_list: declaration_list . declaration

    INT  shift, and go to state 31

    $default  reduce using rule 29 (opt_declaration_list)

    declaration  go to state 62


state 35

   14 function_definition: INT IDENTIFIER '(' @3 parameter_type_list @4 ')' compound_statement .

    $default  reduce using rule 14 (function_definition)


state 36

    8 declarator_list: IDENTIFIER .

    $default  reduce using rule 8 (declarator_list)


state 37

   61 unary_expr: MINUS . unary_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    unary_expr      go to state 64
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 38

   24 statement: RETURN . ';'
   25          | RETURN . expression ';'

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    ';'         shift, and go to state 65
    '('         shift, and go to state 44

    expression        go to state 66
    assign_expr       go to state 50
    ass_identifier    go to state 51
    logical_or_expr   go to state 52
    logical_and_expr  go to state 53
    equality_expr     go to state 54
    relational_expr   go to state 55
    add_expr          go to state 56
    mult_expr         go to state 57
    unary_expr        go to state 58
    postfix_expr      go to state 59
    pst_identifier    go to state 60
    primary_expr      go to state 61


state 39

   21 statement: IF . '(' expression ')' statement
   22          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 67


state 40

   23 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 68


state 41

   67 primary_expr: CONSTANT .

    $default  reduce using rule 67 (primary_expr)


state 42

   41 ass_identifier: IDENTIFIER .
   65 pst_identifier: IDENTIFIER .
   66 primary_expr: IDENTIFIER .

    ASS       reduce using rule 41 (ass_identifier)
    '('       reduce using rule 65 (pst_identifier)
    $default  reduce using rule 66 (primary_expr)


state 43

   18 statement: ';' .

    $default  reduce using rule 18 (statement)


state 44

   68 primary_expr: '(' . expression ')'

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    '('         shift, and go to state 44

    expression        go to state 69
    assign_expr       go to state 50
    ass_identifier    go to state 51
    logical_or_expr   go to state 52
    logical_and_expr  go to state 53
    equality_expr     go to state 54
    relational_expr   go to state 55
    add_expr          go to state 56
    mult_expr         go to state 57
    unary_expr        go to state 58
    postfix_expr      go to state 59
    pst_identifier    go to state 60
    primary_expr      go to state 61


state 45

   35 statement_list: statement .

    $default  reduce using rule 35 (statement_list)


state 46

   20 statement: compound_statement .

    $default  reduce using rule 20 (statement)


state 47

   28 compound_statement: '{' @5 opt_declaration_list opt_statement_list . '}'

    '}'  shift, and go to state 70


state 48

   31 opt_statement_list: statement_list .
   36 statement_list: statement_list . statement

    MINUS       shift, and go to state 37
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    ';'         shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 22

    $default  reduce using rule 31 (opt_statement_list)

    statement           go to state 71
    compound_statement  go to state 46
    expression          go to state 49
    assign_expr         go to state 50
    ass_identifier      go to state 51
    logical_or_expr     go to state 52
    logical_and_expr    go to state 53
    equality_expr       go to state 54
    relational_expr     go to state 55
    add_expr            go to state 56
    mult_expr           go to state 57
    unary_expr          go to state 58
    postfix_expr        go to state 59
    pst_identifier      go to state 60
    primary_expr        go to state 61


state 49

   19 statement: expression . ';'
   38 expression: expression . ',' assign_expr

    ';'  shift, and go to state 72
    ','  shift, and go to state 73


state 50

   37 expression: assign_expr .

    $default  reduce using rule 37 (expression)


state 51

   40 assign_expr: ass_identifier . ASS assign_expr

    ASS  shift, and go to state 74


state 52

   39 assign_expr: logical_or_expr .
   43 logical_or_expr: logical_or_expr . OR logical_and_expr

    OR  shift, and go to state 75

    $default  reduce using rule 39 (assign_expr)


state 53

   42 logical_or_expr: logical_and_expr .
   45 logical_and_expr: logical_and_expr . AND equality_expr

    AND  shift, and go to state 76

    $default  reduce using rule 42 (logical_or_expr)


state 54

   44 logical_and_expr: equality_expr .
   47 equality_expr: equality_expr . EQU relational_expr
   48              | equality_expr . NEQU relational_expr

    EQU   shift, and go to state 77
    NEQU  shift, and go to state 78

    $default  reduce using rule 44 (logical_and_expr)


state 55

   46 equality_expr: relational_expr .
   50 relational_expr: relational_expr . LT add_expr
   51                | relational_expr . MT add_expr
   52                | relational_expr . ELT add_expr
   53                | relational_expr . EMT add_expr

    ELT  shift, and go to state 79
    LT   shift, and go to state 80
    EMT  shift, and go to state 81
    MT   shift, and go to state 82

    $default  reduce using rule 46 (equality_expr)


state 56

   49 relational_expr: add_expr .
   55 add_expr: add_expr . PLUS mult_expr
   56         | add_expr . MINUS mult_expr

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 49 (relational_expr)


state 57

   54 add_expr: mult_expr .
   58 mult_expr: mult_expr . MUL unary_expr
   59          | mult_expr . DIV unary_expr

    DIV  shift, and go to state 85
    MUL  shift, and go to state 86

    $default  reduce using rule 54 (add_expr)


state 58

   57 mult_expr: unary_expr .

    $default  reduce using rule 57 (mult_expr)


state 59

   60 unary_expr: postfix_expr .

    $default  reduce using rule 60 (unary_expr)


state 60

   63 postfix_expr: pst_identifier . '(' ')'
   64             | pst_identifier . '(' argument_expression_list ')'

    '('  shift, and go to state 87


state 61

   62 postfix_expr: primary_expr .

    $default  reduce using rule 62 (postfix_expr)


state 62

   34 declaration_list: declaration_list declaration .

    $default  reduce using rule 34 (declaration_list)


state 63

   65 pst_identifier: IDENTIFIER .
   66 primary_expr: IDENTIFIER .

    '('       reduce using rule 65 (pst_identifier)
    $default  reduce using rule 66 (primary_expr)


state 64

   61 unary_expr: MINUS unary_expr .

    $default  reduce using rule 61 (unary_expr)


state 65

   24 statement: RETURN ';' .

    $default  reduce using rule 24 (statement)


state 66

   25 statement: RETURN expression . ';'
   38 expression: expression . ',' assign_expr

    ';'  shift, and go to state 88
    ','  shift, and go to state 73


state 67

   21 statement: IF '(' . expression ')' statement
   22          | IF '(' . expression ')' statement ELSE statement

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    '('         shift, and go to state 44

    expression        go to state 89
    assign_expr       go to state 50
    ass_identifier    go to state 51
    logical_or_expr   go to state 52
    logical_and_expr  go to state 53
    equality_expr     go to state 54
    relational_expr   go to state 55
    add_expr          go to state 56
    mult_expr         go to state 57
    unary_expr        go to state 58
    postfix_expr      go to state 59
    pst_identifier    go to state 60
    primary_expr      go to state 61


state 68

   23 statement: WHILE '(' . expression ')' statement

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    '('         shift, and go to state 44

    expression        go to state 90
    assign_expr       go to state 50
    ass_identifier    go to state 51
    logical_or_expr   go to state 52
    logical_and_expr  go to state 53
    equality_expr     go to state 54
    relational_expr   go to state 55
    add_expr          go to state 56
    mult_expr         go to state 57
    unary_expr        go to state 58
    postfix_expr      go to state 59
    pst_identifier    go to state 60
    primary_expr      go to state 61


state 69

   38 expression: expression . ',' assign_expr
   68 primary_expr: '(' expression . ')'

    ','  shift, and go to state 73
    ')'  shift, and go to state 91


state 70

   28 compound_statement: '{' @5 opt_declaration_list opt_statement_list '}' .

    $default  reduce using rule 28 (compound_statement)


state 71

   36 statement_list: statement_list statement .

    $default  reduce using rule 36 (statement_list)


state 72

   19 statement: expression ';' .

    $default  reduce using rule 19 (statement)


state 73

   38 expression: expression ',' . assign_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    '('         shift, and go to state 44

    assign_expr       go to state 92
    ass_identifier    go to state 51
    logical_or_expr   go to state 52
    logical_and_expr  go to state 53
    equality_expr     go to state 54
    relational_expr   go to state 55
    add_expr          go to state 56
    mult_expr         go to state 57
    unary_expr        go to state 58
    postfix_expr      go to state 59
    pst_identifier    go to state 60
    primary_expr      go to state 61


state 74

   40 assign_expr: ass_identifier ASS . assign_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    '('         shift, and go to state 44

    assign_expr       go to state 93
    ass_identifier    go to state 51
    logical_or_expr   go to state 52
    logical_and_expr  go to state 53
    equality_expr     go to state 54
    relational_expr   go to state 55
    add_expr          go to state 56
    mult_expr         go to state 57
    unary_expr        go to state 58
    postfix_expr      go to state 59
    pst_identifier    go to state 60
    primary_expr      go to state 61


state 75

   43 logical_or_expr: logical_or_expr OR . logical_and_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    logical_and_expr  go to state 94
    equality_expr     go to state 54
    relational_expr   go to state 55
    add_expr          go to state 56
    mult_expr         go to state 57
    unary_expr        go to state 58
    postfix_expr      go to state 59
    pst_identifier    go to state 60
    primary_expr      go to state 61


state 76

   45 logical_and_expr: logical_and_expr AND . equality_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    equality_expr    go to state 95
    relational_expr  go to state 55
    add_expr         go to state 56
    mult_expr        go to state 57
    unary_expr       go to state 58
    postfix_expr     go to state 59
    pst_identifier   go to state 60
    primary_expr     go to state 61


state 77

   47 equality_expr: equality_expr EQU . relational_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    relational_expr  go to state 96
    add_expr         go to state 56
    mult_expr        go to state 57
    unary_expr       go to state 58
    postfix_expr     go to state 59
    pst_identifier   go to state 60
    primary_expr     go to state 61


state 78

   48 equality_expr: equality_expr NEQU . relational_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    relational_expr  go to state 97
    add_expr         go to state 56
    mult_expr        go to state 57
    unary_expr       go to state 58
    postfix_expr     go to state 59
    pst_identifier   go to state 60
    primary_expr     go to state 61


state 79

   52 relational_expr: relational_expr ELT . add_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    add_expr        go to state 98
    mult_expr       go to state 57
    unary_expr      go to state 58
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 80

   50 relational_expr: relational_expr LT . add_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    add_expr        go to state 99
    mult_expr       go to state 57
    unary_expr      go to state 58
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 81

   53 relational_expr: relational_expr EMT . add_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    add_expr        go to state 100
    mult_expr       go to state 57
    unary_expr      go to state 58
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 82

   51 relational_expr: relational_expr MT . add_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    add_expr        go to state 101
    mult_expr       go to state 57
    unary_expr      go to state 58
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 83

   55 add_expr: add_expr PLUS . mult_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    mult_expr       go to state 102
    unary_expr      go to state 58
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 84

   56 add_expr: add_expr MINUS . mult_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    mult_expr       go to state 103
    unary_expr      go to state 58
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 85

   59 mult_expr: mult_expr DIV . unary_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    unary_expr      go to state 104
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 86

   58 mult_expr: mult_expr MUL . unary_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 63
    '('         shift, and go to state 44

    unary_expr      go to state 105
    postfix_expr    go to state 59
    pst_identifier  go to state 60
    primary_expr    go to state 61


state 87

   63 postfix_expr: pst_identifier '(' . ')'
   64             | pst_identifier '(' . argument_expression_list ')'

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    '('         shift, and go to state 44
    ')'         shift, and go to state 106

    assign_expr               go to state 107
    ass_identifier            go to state 51
    logical_or_expr           go to state 52
    logical_and_expr          go to state 53
    equality_expr             go to state 54
    relational_expr           go to state 55
    add_expr                  go to state 56
    mult_expr                 go to state 57
    unary_expr                go to state 58
    postfix_expr              go to state 59
    pst_identifier            go to state 60
    primary_expr              go to state 61
    argument_expression_list  go to state 108


state 88

   25 statement: RETURN expression ';' .

    $default  reduce using rule 25 (statement)


state 89

   21 statement: IF '(' expression . ')' statement
   22          | IF '(' expression . ')' statement ELSE statement
   38 expression: expression . ',' assign_expr

    ','  shift, and go to state 73
    ')'  shift, and go to state 109


state 90

   23 statement: WHILE '(' expression . ')' statement
   38 expression: expression . ',' assign_expr

    ','  shift, and go to state 73
    ')'  shift, and go to state 110


state 91

   68 primary_expr: '(' expression ')' .

    $default  reduce using rule 68 (primary_expr)


state 92

   38 expression: expression ',' assign_expr .

    $default  reduce using rule 38 (expression)


state 93

   40 assign_expr: ass_identifier ASS assign_expr .

    $default  reduce using rule 40 (assign_expr)


state 94

   43 logical_or_expr: logical_or_expr OR logical_and_expr .
   45 logical_and_expr: logical_and_expr . AND equality_expr

    AND  shift, and go to state 76

    $default  reduce using rule 43 (logical_or_expr)


state 95

   45 logical_and_expr: logical_and_expr AND equality_expr .
   47 equality_expr: equality_expr . EQU relational_expr
   48              | equality_expr . NEQU relational_expr

    EQU   shift, and go to state 77
    NEQU  shift, and go to state 78

    $default  reduce using rule 45 (logical_and_expr)


state 96

   47 equality_expr: equality_expr EQU relational_expr .
   50 relational_expr: relational_expr . LT add_expr
   51                | relational_expr . MT add_expr
   52                | relational_expr . ELT add_expr
   53                | relational_expr . EMT add_expr

    ELT  shift, and go to state 79
    LT   shift, and go to state 80
    EMT  shift, and go to state 81
    MT   shift, and go to state 82

    $default  reduce using rule 47 (equality_expr)


state 97

   48 equality_expr: equality_expr NEQU relational_expr .
   50 relational_expr: relational_expr . LT add_expr
   51                | relational_expr . MT add_expr
   52                | relational_expr . ELT add_expr
   53                | relational_expr . EMT add_expr

    ELT  shift, and go to state 79
    LT   shift, and go to state 80
    EMT  shift, and go to state 81
    MT   shift, and go to state 82

    $default  reduce using rule 48 (equality_expr)


state 98

   52 relational_expr: relational_expr ELT add_expr .
   55 add_expr: add_expr . PLUS mult_expr
   56         | add_expr . MINUS mult_expr

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 52 (relational_expr)


state 99

   50 relational_expr: relational_expr LT add_expr .
   55 add_expr: add_expr . PLUS mult_expr
   56         | add_expr . MINUS mult_expr

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 50 (relational_expr)


state 100

   53 relational_expr: relational_expr EMT add_expr .
   55 add_expr: add_expr . PLUS mult_expr
   56         | add_expr . MINUS mult_expr

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 53 (relational_expr)


state 101

   51 relational_expr: relational_expr MT add_expr .
   55 add_expr: add_expr . PLUS mult_expr
   56         | add_expr . MINUS mult_expr

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 51 (relational_expr)


state 102

   55 add_expr: add_expr PLUS mult_expr .
   58 mult_expr: mult_expr . MUL unary_expr
   59          | mult_expr . DIV unary_expr

    DIV  shift, and go to state 85
    MUL  shift, and go to state 86

    $default  reduce using rule 55 (add_expr)


state 103

   56 add_expr: add_expr MINUS mult_expr .
   58 mult_expr: mult_expr . MUL unary_expr
   59          | mult_expr . DIV unary_expr

    DIV  shift, and go to state 85
    MUL  shift, and go to state 86

    $default  reduce using rule 56 (add_expr)


state 104

   59 mult_expr: mult_expr DIV unary_expr .

    $default  reduce using rule 59 (mult_expr)


state 105

   58 mult_expr: mult_expr MUL unary_expr .

    $default  reduce using rule 58 (mult_expr)


state 106

   63 postfix_expr: pst_identifier '(' ')' .

    $default  reduce using rule 63 (postfix_expr)


state 107

   69 argument_expression_list: assign_expr .

    $default  reduce using rule 69 (argument_expression_list)


state 108

   64 postfix_expr: pst_identifier '(' argument_expression_list . ')'
   70 argument_expression_list: argument_expression_list . ',' assign_expr

    ','  shift, and go to state 111
    ')'  shift, and go to state 112


state 109

   21 statement: IF '(' expression ')' . statement
   22          | IF '(' expression ')' . statement ELSE statement

    MINUS       shift, and go to state 37
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    ';'         shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 22

    statement           go to state 113
    compound_statement  go to state 46
    expression          go to state 49
    assign_expr         go to state 50
    ass_identifier      go to state 51
    logical_or_expr     go to state 52
    logical_and_expr    go to state 53
    equality_expr       go to state 54
    relational_expr     go to state 55
    add_expr            go to state 56
    mult_expr           go to state 57
    unary_expr          go to state 58
    postfix_expr        go to state 59
    pst_identifier      go to state 60
    primary_expr        go to state 61


state 110

   23 statement: WHILE '(' expression ')' . statement

    MINUS       shift, and go to state 37
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    ';'         shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 22

    statement           go to state 114
    compound_statement  go to state 46
    expression          go to state 49
    assign_expr         go to state 50
    ass_identifier      go to state 51
    logical_or_expr     go to state 52
    logical_and_expr    go to state 53
    equality_expr       go to state 54
    relational_expr     go to state 55
    add_expr            go to state 56
    mult_expr           go to state 57
    unary_expr          go to state 58
    postfix_expr        go to state 59
    pst_identifier      go to state 60
    primary_expr        go to state 61


state 111

   70 argument_expression_list: argument_expression_list ',' . assign_expr

    MINUS       shift, and go to state 37
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    '('         shift, and go to state 44

    assign_expr       go to state 115
    ass_identifier    go to state 51
    logical_or_expr   go to state 52
    logical_and_expr  go to state 53
    equality_expr     go to state 54
    relational_expr   go to state 55
    add_expr          go to state 56
    mult_expr         go to state 57
    unary_expr        go to state 58
    postfix_expr      go to state 59
    pst_identifier    go to state 60
    primary_expr      go to state 61


state 112

   64 postfix_expr: pst_identifier '(' argument_expression_list ')' .

    $default  reduce using rule 64 (postfix_expr)


state 113

   21 statement: IF '(' expression ')' statement .
   22          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 116

    ELSE      [reduce using rule 21 (statement)]
    $default  reduce using rule 21 (statement)


state 114

   23 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 23 (statement)


state 115

   70 argument_expression_list: argument_expression_list ',' assign_expr .

    $default  reduce using rule 70 (argument_expression_list)


state 116

   22 statement: IF '(' expression ')' statement ELSE . statement

    MINUS       shift, and go to state 37
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    CONSTANT    shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    ';'         shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 22

    statement           go to state 117
    compound_statement  go to state 46
    expression          go to state 49
    assign_expr         go to state 50
    ass_identifier      go to state 51
    logical_or_expr     go to state 52
    logical_and_expr    go to state 53
    equality_expr       go to state 54
    relational_expr     go to state 55
    add_expr            go to state 56
    mult_expr           go to state 57
    unary_expr          go to state 58
    postfix_expr        go to state 59
    pst_identifier      go to state 60
    primary_expr        go to state 61


state 117

   22 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 22 (statement)
